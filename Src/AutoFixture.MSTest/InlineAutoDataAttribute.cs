using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Reflection;
using AutoFixture.MSTest.DataSources;

namespace AutoFixture.MSTest
{
    /// <summary>
    /// Provides a data source for a data theory, with the data coming from inline
    /// values combined with auto-generated data specimens generated by AutoFixture.
    /// </summary>
    [AttributeUsage(AttributeTargets.Method)]
    [SuppressMessage("Microsoft.Performance", "CA1813:AvoidUnsealedAttributes",
        Justification = "This attribute is the root of a potential attribute hierarchy.")]
    public class InlineAutoDataAttribute : BaseAutoDataAttribute
    {
        public InlineAutoDataAttribute(params object[] data)
            : this(() => new Fixture(), data)
        {
        }

        protected InlineAutoDataAttribute(Func<IFixture> fixtureFactory, object[] data)
            : base(fixtureFactory)
        {
            this.Data = data ?? throw new ArgumentNullException(nameof(data));
        }

        /// <summary>
        /// Gets data for calling test method.
        /// </summary>
        public object[] Data { get; }

        /// <inheritdoc />
        public override IEnumerable<object[]> GetData(MethodInfo methodInfo)
        {
            var inlineSource = this.CreateInlineSource(this.Data);
            var autoSource = this.CreateAutoSource(this.FixtureFactory, inlineSource);
            return autoSource.GetTestCases(methodInfo).Select(x => x.ToArray());
        }

        /// <summary>
        /// Creates a inline test case source instance.
        /// </summary>
        /// <param name="data">The inline data.</param>
        /// <returns>A <see cref="ITestCaseSource" /> instance.</returns>
        protected virtual ITestCaseSource CreateInlineSource(object[] data)
        {
            return new InlineSource(data);
        }
    }
}
